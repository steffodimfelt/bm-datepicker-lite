import { trigger, state, style, transition, animate } from '@angular/animations';
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { Validators } from '@angular/forms';
import stylesDefault from './styles-default';
import * as i0 from "@angular/core";
import * as i1 from "./services/calendar-years.service";
import * as i2 from "./services/calendar-months.service";
import * as i3 from "./services/calendar-days.service";
import * as i4 from "@angular/common";
import * as i5 from "@angular/forms";
export class BmDatepickerLiteComponent {
    constructor(elementRef, calendarYearsService, calendarMonthsService, calendarDaysService) {
        this.elementRef = elementRef;
        this.calendarYearsService = calendarYearsService;
        this.calendarMonthsService = calendarMonthsService;
        this.calendarDaysService = calendarDaysService;
        this.label = null;
        this.styleSheet = null;
        this.weekdays = null;
        this.months = null;
        this.formControlNameInput = 'defaultFormControlName';
        this.placeholder = 'Pick a date';
        this.pattern = 'yyyy-mm-dd';
        this.calendarOutput = new EventEmitter();
        this.date = new Date();
        this.inputData = { year: '0', month: '0', day: '0' };
        this.showDatePicker = false;
        this.styleElement = null;
        this.selectNext = () => {
            this.calendarMonthsService.nextMonth();
            this.calendarYearsService.selectedYear =
                this.calendarMonthsService.selectedMonth === 0
                    ? this.calendarYearsService.selectedYear + 1
                    : this.calendarYearsService.selectedYear;
            this.setFirstAndLastDay();
        };
        this.selectPrevious = () => {
            this.calendarMonthsService.previousMonth();
            this.calendarYearsService.selectedYear =
                this.calendarMonthsService.selectedMonth === 11
                    ? this.calendarYearsService.selectedYear - 1
                    : this.calendarYearsService.selectedYear;
            this.setFirstAndLastDay();
        };
        this.selectDay = (dayValue) => {
            this.inputData = {
                year: this.calendarYearsService.returnYearDate(dayValue).toString(),
                month: this.calendarMonthsService.returnMonthDate(dayValue).toString(),
                day: this.calendarDaysService.returnWeekdayDate(dayValue).toString()
            };
            this.selectedDayDate(dayValue);
            const formatDate = this.formatedDate();
            this.formGroupInput?.controls[this.formControlNameInput]?.setValue(formatDate);
            this.calendarOutput.emit(formatDate);
            this.bmDatePicker.nativeElement.value = formatDate;
            this.showDatePicker = false;
        };
        this.selectedDayDate = (dayDate) => {
            let parsedDay = this.calendarDaysService
                .returnWeekdayDate(dayDate)
                .toString();
            let selectParsedMonth = this.calendarMonthsService.returnMonthDate(dayDate) + 1;
            selectParsedMonth = selectParsedMonth.toString();
            selectParsedMonth.length < 2 &&
                (selectParsedMonth = `0${selectParsedMonth}`);
            let parsedYear = this.calendarYearsService
                .returnYearDate(dayDate)
                .toString();
            if (parsedDay.length < 2)
                parsedDay = `0${parsedDay}`;
            if (parsedYear === this.inputData.year &&
                selectParsedMonth === this.inputData.month &&
                parsedDay === this.inputData.day) {
                return true;
            }
            return false;
        };
        this.formatedDate = () => {
            const formatedMonth = parseInt(this.inputData.month) + 1;
            formatedMonth.toString().length < 2
                ? (this.inputData.month = `0${formatedMonth.toString()}`)
                : (this.inputData.month = `${formatedMonth.toString()}`);
            this.inputData.day.length < 2 &&
                (this.inputData.day = `0${this.inputData.day}`);
            let formatedYear = this.inputData.year.toString();
            const getFullYear = this.pattern.match('yyyy');
            if (getFullYear === null) {
                formatedYear =
                    formatedYear.slice(-1, 1) + formatedYear.slice(2, formatedYear.length);
            }
            const divider = this.pattern.match('[ -./]');
            let dateArray = [];
            const patternArray = this.pattern.split(divider[0]);
            patternArray.forEach((format) => {
                if (format === 'dd') {
                    dateArray.push(this.inputData.day);
                }
                else if (format === 'mm') {
                    dateArray.push(this.inputData.month);
                }
                else {
                    dateArray.push(formatedYear);
                }
            });
            return `${dateArray[0]}${divider}${dateArray[1]}${divider}${dateArray[2]}`;
        };
    }
    ngOnInit() {
        this.calendarYearsService.year = this.date;
        this.calendarMonthsService.month = this.date;
        this.calendarDaysService.day = this.date;
        this.calendarDaysService.selectedDay = null;
        !!this.weekdays && (this.calendarDaysService.dayLabels = this.weekdays);
        !!this.months && (this.calendarMonthsService.monthLabels = this.months);
        this.createStyle();
        const divider = this.pattern.match('[ -./]');
        const patternArray = this.pattern.split(divider[0]);
        const validatePattern = `[0-9]{${patternArray[0].length}}${divider}[0-9]{${patternArray[1].length}}${divider}[0-9]{${patternArray[2].length}}`;
        this.formGroupInput
            ?.get(this.formControlNameInput)
            ?.addValidators(Validators.pattern(validatePattern));
    }
    createStyle() {
        if (this.styleElement) {
            this.styleElement.removeChild(this.styleElement.firstChild);
        }
        else {
            this.styleElement = document.createElement('style');
        }
        if (this.styleSheet) {
            this.styleSheet = this.styleSheet
                .replace('}', `} #${this.formControlNameInput} `)
                .replace(',', `, #${this.formControlNameInput} `);
            this.styleSheet = `${stylesDefault} #${this.formControlNameInput}  ${this.styleSheet}`;
        }
        else {
            this.styleSheet = stylesDefault;
        }
        this.styleElement.appendChild(document.createTextNode(this.styleSheet));
        this.elementRef.nativeElement.appendChild(this.styleElement);
    }
    setFirstAndLastDay() {
        this.calendarMonthsService.firstDayOfSelectedMonth(this.calendarYearsService.selectedYear, this.calendarMonthsService.selectedMonth);
        this.calendarMonthsService.lastDayOfSelectedMonth(this.calendarYearsService.selectedYear, this.calendarMonthsService.selectedMonth);
    }
}
BmDatepickerLiteComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: BmDatepickerLiteComponent, deps: [{ token: i0.ElementRef }, { token: i1.CalendarYearsService }, { token: i2.CalendarMonthsService }, { token: i3.CalendarDaysService }], target: i0.ɵɵFactoryTarget.Component });
BmDatepickerLiteComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.0", type: BmDatepickerLiteComponent, selector: "bm-datepicker-lite", inputs: { label: "label", styleSheet: "styleSheet", weekdays: "weekdays", months: "months", formGroupInput: "formGroupInput", formControlNameInput: "formControlNameInput", placeholder: "placeholder", pattern: "pattern" }, outputs: { calendarOutput: "calendarOutput" }, viewQueries: [{ propertyName: "bmDatePicker", first: true, predicate: ["bmDatePicker"], descendants: true }], ngImport: i0, template: "<div id=\"{{ formControlNameInput }}\">\n  <label for=\"bm-date-input\">{{ label }}</label>\n  <div class=\"bm-date-input-wrapper\">\n    <div *ngIf=\"!formGroupInput\" class=\"bm-date-input-wrapper\">\n      <input\n        #bmDatePicker\n        readonly\n        [pattern]=\"pattern\"\n        placeholder=\"{{ placeholder }}\"\n        class=\"bm-date-input bm-date-input-pointer\" />\n    </div>\n    <div\n      *ngIf=\"!!formGroupInput\"\n      [formGroup]=\"formGroupInput\"\n      class=\"bm-date-input-wrapper\">\n      <input\n        #bmDatePicker\n        readonly\n        formControlName=\"{{ formControlNameInput }}\"\n        placeholder=\"{{ placeholder }}\"\n        class=\"bm-date-input bm-date-input-pointer\" />\n    </div>\n    <div class=\"bm-toggle-button\" (click)=\"showDatePicker = !showDatePicker\">\n      <ng-content></ng-content>\n      <div class=\"bm-default-calendar bm-default-calendar-icon\">\n        <div class=\"upper-line\">\n          <div class=\"inner\"></div>\n          <div class=\"inner\"></div>\n        </div>\n        <div class=\"inner-line\"></div>\n      </div>\n    </div>\n  </div>\n\n  <div [@toggleTable]=\"showDatePicker ? 'open' : 'close'\" class=\"bm-table\">\n    <div class=\"bm-tr\">\n      <div\n        *ngIf=\"\n          calendarYearsService.selectedYear ===\n            calendarYearsService.currentYear &&\n            calendarMonthsService.selectedMonth ===\n              calendarMonthsService.currentMonth;\n          else previousYearButton\n        \"\n        class=\"bm-td-empty-month\"></div>\n      <ng-template #previousYearButton>\n        <div class=\"bm-td\">\n          <div class=\"bm-td-inner\" (click)=\"selectPrevious()\">\n            <span class=\"bm-arrow bm-arrow-left\"></span>\n          </div>\n        </div>\n      </ng-template>\n      <div class=\"bm-year-month-title\">\n        <p class=\"bm-date-p bm-month-title\">\n          {{ calendarMonthsService.selectedMonthName }}\n        </p>\n        <p class=\"bm-date-p bm-year-title\">\n          {{ calendarYearsService.selectedYear }}\n        </p>\n      </div>\n      <div class=\"bm-td\">\n        <div class=\"bm-td-inner\" (click)=\"selectNext()\">\n          <span class=\"bm-arrow bm-arrow-right\"></span>\n        </div>\n      </div>\n    </div>\n    <div class=\"bm-tr bm-daylabels-wrapper\">\n      <div\n        *ngFor=\"let weekdayLabel of calendarDaysService.dayLabels\"\n        class=\"bm-th\">\n        <p class=\"bm-date-p\">{{ weekdayLabel }}</p>\n      </div>\n    </div>\n    <div\n      *ngFor=\"let weekRow of calendarMonthsService.selectedMonthDaysArray\"\n      class=\"bm-tr\">\n      <div\n        *ngFor=\"let dayDate of weekRow; let dayIndex = index\"\n        [ngClass]=\"{\n          'bm-td': dayDate,\n          'bm-td-empty': !dayDate\n        }\">\n        <div\n          (click)=\"selectDay(dayDate)\"\n          [ngClass]=\"{\n            'bm-td-inner': dayDate,\n            'bm-td-inner-empty': !dayDate,\n            'bm-td-current-day':\n              calendarYearsService.selectedYear ===\n                calendarYearsService.currentYear &&\n              calendarMonthsService.selectedMonth ===\n                calendarMonthsService.currentMonth &&\n              dayDate &&\n              calendarDaysService.returnWeekdayDate(dayDate) ===\n                calendarDaysService.currentDay &&\n              calendarDaysService.selectedDay !==\n                calendarDaysService.returnWeekdayDate(dayDate),\n            'bm-td-before-day':\n              calendarYearsService.selectedYear ===\n                calendarYearsService.currentYear &&\n              calendarMonthsService.selectedMonth ===\n                calendarMonthsService.currentMonth &&\n              dayDate &&\n              calendarDaysService.returnWeekdayDate(dayDate) <\n                calendarDaysService.currentDay,\n            'bm-td-selected-day': dayDate && selectedDayDate(dayDate)\n          }\">\n          <p\n            class=\"bm-date-p\"\n            [class.bm-weekend]=\"dayDate && (dayIndex === 5 || dayIndex === 6)\">\n            {{ dayDate && calendarDaysService.returnWeekdayDate(dayDate) }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", styles: [".bm-default-calendar:not(:only-child){display:none;width:16px;height:16px}.bm-default-calendar-icon{width:14px;height:14px;border:.1rem solid #fff;border-radius:3px;box-sizing:border-box;display:flex;flex-direction:column}.bm-default-calendar-icon .upper-line{width:100%;height:.3rem;display:flex;flex-direction:row;justify-content:space-around}.bm-default-calendar-icon .upper-line .inner{height:.25rem;width:.1rem;background-color:#fff;margin-top:-.2rem}.bm-default-calendar-icon .inner-line{height:.1rem;width:100%;background-color:#fff;margin-top:-.1rem}\n"], dependencies: [{ kind: "directive", type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i5.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i5.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }], animations: [
        trigger('toggleTable', [
            state('open', style({
                opacity: 1,
                marginTop: '10px'
            })),
            state('close', style({
                height: 0,
                padding: 0,
                opacity: 0,
                marginTop: 0
            })),
            transition('open <=> close', [animate('.2s ease-out')])
        ])
    ] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: BmDatepickerLiteComponent, decorators: [{
            type: Component,
            args: [{ selector: 'bm-datepicker-lite', animations: [
                        trigger('toggleTable', [
                            state('open', style({
                                opacity: 1,
                                marginTop: '10px'
                            })),
                            state('close', style({
                                height: 0,
                                padding: 0,
                                opacity: 0,
                                marginTop: 0
                            })),
                            transition('open <=> close', [animate('.2s ease-out')])
                        ])
                    ], template: "<div id=\"{{ formControlNameInput }}\">\n  <label for=\"bm-date-input\">{{ label }}</label>\n  <div class=\"bm-date-input-wrapper\">\n    <div *ngIf=\"!formGroupInput\" class=\"bm-date-input-wrapper\">\n      <input\n        #bmDatePicker\n        readonly\n        [pattern]=\"pattern\"\n        placeholder=\"{{ placeholder }}\"\n        class=\"bm-date-input bm-date-input-pointer\" />\n    </div>\n    <div\n      *ngIf=\"!!formGroupInput\"\n      [formGroup]=\"formGroupInput\"\n      class=\"bm-date-input-wrapper\">\n      <input\n        #bmDatePicker\n        readonly\n        formControlName=\"{{ formControlNameInput }}\"\n        placeholder=\"{{ placeholder }}\"\n        class=\"bm-date-input bm-date-input-pointer\" />\n    </div>\n    <div class=\"bm-toggle-button\" (click)=\"showDatePicker = !showDatePicker\">\n      <ng-content></ng-content>\n      <div class=\"bm-default-calendar bm-default-calendar-icon\">\n        <div class=\"upper-line\">\n          <div class=\"inner\"></div>\n          <div class=\"inner\"></div>\n        </div>\n        <div class=\"inner-line\"></div>\n      </div>\n    </div>\n  </div>\n\n  <div [@toggleTable]=\"showDatePicker ? 'open' : 'close'\" class=\"bm-table\">\n    <div class=\"bm-tr\">\n      <div\n        *ngIf=\"\n          calendarYearsService.selectedYear ===\n            calendarYearsService.currentYear &&\n            calendarMonthsService.selectedMonth ===\n              calendarMonthsService.currentMonth;\n          else previousYearButton\n        \"\n        class=\"bm-td-empty-month\"></div>\n      <ng-template #previousYearButton>\n        <div class=\"bm-td\">\n          <div class=\"bm-td-inner\" (click)=\"selectPrevious()\">\n            <span class=\"bm-arrow bm-arrow-left\"></span>\n          </div>\n        </div>\n      </ng-template>\n      <div class=\"bm-year-month-title\">\n        <p class=\"bm-date-p bm-month-title\">\n          {{ calendarMonthsService.selectedMonthName }}\n        </p>\n        <p class=\"bm-date-p bm-year-title\">\n          {{ calendarYearsService.selectedYear }}\n        </p>\n      </div>\n      <div class=\"bm-td\">\n        <div class=\"bm-td-inner\" (click)=\"selectNext()\">\n          <span class=\"bm-arrow bm-arrow-right\"></span>\n        </div>\n      </div>\n    </div>\n    <div class=\"bm-tr bm-daylabels-wrapper\">\n      <div\n        *ngFor=\"let weekdayLabel of calendarDaysService.dayLabels\"\n        class=\"bm-th\">\n        <p class=\"bm-date-p\">{{ weekdayLabel }}</p>\n      </div>\n    </div>\n    <div\n      *ngFor=\"let weekRow of calendarMonthsService.selectedMonthDaysArray\"\n      class=\"bm-tr\">\n      <div\n        *ngFor=\"let dayDate of weekRow; let dayIndex = index\"\n        [ngClass]=\"{\n          'bm-td': dayDate,\n          'bm-td-empty': !dayDate\n        }\">\n        <div\n          (click)=\"selectDay(dayDate)\"\n          [ngClass]=\"{\n            'bm-td-inner': dayDate,\n            'bm-td-inner-empty': !dayDate,\n            'bm-td-current-day':\n              calendarYearsService.selectedYear ===\n                calendarYearsService.currentYear &&\n              calendarMonthsService.selectedMonth ===\n                calendarMonthsService.currentMonth &&\n              dayDate &&\n              calendarDaysService.returnWeekdayDate(dayDate) ===\n                calendarDaysService.currentDay &&\n              calendarDaysService.selectedDay !==\n                calendarDaysService.returnWeekdayDate(dayDate),\n            'bm-td-before-day':\n              calendarYearsService.selectedYear ===\n                calendarYearsService.currentYear &&\n              calendarMonthsService.selectedMonth ===\n                calendarMonthsService.currentMonth &&\n              dayDate &&\n              calendarDaysService.returnWeekdayDate(dayDate) <\n                calendarDaysService.currentDay,\n            'bm-td-selected-day': dayDate && selectedDayDate(dayDate)\n          }\">\n          <p\n            class=\"bm-date-p\"\n            [class.bm-weekend]=\"dayDate && (dayIndex === 5 || dayIndex === 6)\">\n            {{ dayDate && calendarDaysService.returnWeekdayDate(dayDate) }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", styles: [".bm-default-calendar:not(:only-child){display:none;width:16px;height:16px}.bm-default-calendar-icon{width:14px;height:14px;border:.1rem solid #fff;border-radius:3px;box-sizing:border-box;display:flex;flex-direction:column}.bm-default-calendar-icon .upper-line{width:100%;height:.3rem;display:flex;flex-direction:row;justify-content:space-around}.bm-default-calendar-icon .upper-line .inner{height:.25rem;width:.1rem;background-color:#fff;margin-top:-.2rem}.bm-default-calendar-icon .inner-line{height:.1rem;width:100%;background-color:#fff;margin-top:-.1rem}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.CalendarYearsService }, { type: i2.CalendarMonthsService }, { type: i3.CalendarDaysService }]; }, propDecorators: { bmDatePicker: [{
                type: ViewChild,
                args: ['bmDatePicker']
            }], label: [{
                type: Input
            }], styleSheet: [{
                type: Input
            }], weekdays: [{
                type: Input
            }], months: [{
                type: Input
            }], formGroupInput: [{
                type: Input
            }], formControlNameInput: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], pattern: [{
                type: Input
            }], calendarOutput: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,